[{"name":"NoSingleFieldRecord","comment":"\n\n@docs rule\n\n","unions":[],"aliases":[],"values":[{"name":"rule","comment":" Reports records containing only a single field.\n\n    config =\n        [ NoSingleFieldRecord.rule\n        ]\n\n\n## Fail\n\n    type alias SingleFieldRecord =\n        { foo : String }\n\n    singleFieldRecord : String -> { foo : String }\n    singleFieldRecord foo =\n        { foo = foo }\n\n    foo : { r | foo : String } -> String\n    foo r =\n        r.foo\n\n\n## Success\n\n    type alias MultipleFieldRecord =\n        { foo : String\n        , bar : Int\n        }\n\n\n## When (not) to enable this rule\n\nUsing a record is obsolete if you only plan to store a single field in it. However, there are times when a single field may be desirable, for example:\n\n  - Rapid development, when you're planning ahead and trying out data models.\n  - When you're refactoring to or from a record you may need to step through a single record.\n  - To match the pattern of similar data types and to make a predictable API.\n  - When you're working with generic records matching only one field, e.g., `{ r | some : String }`. Although, these should be refactored to take one field.\n\n\n## Try it out\n\nYou can try this rule out by running the following command:\n\n```bash\nelm-review --template sparksp/elm-review-rules-to-avoid/preview --rules NoSingleFieldRecord\n```\n\n","type":"Review.Rule.Rule"}],"binops":[]},{"name":"NoSingleLineRecords","comment":"\n\n@docs rule\n\n","unions":[],"aliases":[],"values":[{"name":"rule","comment":" Reports record definitions in type aliases that are written on a single line.\n\n    config =\n        [ NoSingleLineRecords.rule\n        ]\n\n\n## Fail\n\n    type alias Person =\n        { name : String, age : Int, address : Address }\n\n\n## Success\n\n    type alias Person =\n        { name : String\n        , age : Int\n        , address : Address\n        }\n\n\n## When (not) to enable this rule\n\nYou don't ever need to enable this rule. This is a code style that can easily be reviewed manually as appropriate.\n\n\n## Try it out\n\nYou can try this rule out by running the following command:\n\n```bash\nelm-review --template sparksp/elm-review-rules-to-avoid/preview --rules NoSingleLineRecords\n```\n\n","type":"Review.Rule.Rule"}],"binops":[]}]